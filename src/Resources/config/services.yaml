parameters:

services:
    _defaults:
        autowire: false
        autoconfigure: false
        public: false

    _instanceof:
        ConnectHolland\UserBundle\Mailer\BaseEmail:
            calls:
                - method: setMailer
                  arguments:
                      - '@ConnectHolland\UserBundle\Mailer\Mailer'

    Symfony\Component\HttpKernel\UriSigner:
        arguments:
            - '%kernel.secret%'

    ConnectHolland\UserBundle\Mailer\Mailer:
        arguments:
            - '@mailer'
            - '%env(USERBUNDLE_FROM_EMAILADDRESS)%'
            - '@twig'

    ConnectHolland\UserBundle\Mailer\RegistrationEmail:
        arguments:
            - '@router'
            - '@Symfony\Component\HttpKernel\UriSigner'
            - '@GisoStallenberg\Bundle\ResponseContentNegotiationBundle\Negotiation\FormatNegotiator'
            - '@request_stack'
    ConnectHolland\UserBundle\Mailer\RegistrationEmailInterface: '@ConnectHolland\UserBundle\Mailer\RegistrationEmail'

    ConnectHolland\UserBundle\Mailer\ValidateUsernameEmail:
        arguments:
            - '@router'
            - '@Symfony\Component\HttpKernel\UriSigner'
            - '@GisoStallenberg\Bundle\ResponseContentNegotiationBundle\Negotiation\FormatNegotiator'
            - '@request_stack'

    ConnectHolland\UserBundle\Mailer\ResetEmail:
        arguments:
            - '@router'
            - '@Symfony\Component\HttpKernel\UriSigner'

    ConnectHolland\UserBundle\Mailer\DeleteEmail:

    ConnectHolland\UserBundle\Controller\RegistrationController:
        arguments:
            - '@Doctrine\Persistence\ManagerRegistry'
            - '@event_dispatcher'
            - '@router'
            - '@twig'
        tags:
            - { name: controller.service_arguments }

    ConnectHolland\UserBundle\Controller\Account\ProfileController:
        arguments:
            - '@event_dispatcher'
            - '@twig'
        tags:
            - { name: controller.service_arguments }

    ConnectHolland\UserBundle\Controller\Account\AccountController:
        arguments:
            - '@security.user_password_hasher'
            - '@event_dispatcher'
            - '@twig'
            - '@Doctrine\Persistence\ManagerRegistry'
            - '@security.token_storage'
        tags:
            - { name: controller.service_arguments }

    ConnectHolland\UserBundle\Controller\ResetController:
        arguments:
            - '@Doctrine\Persistence\ManagerRegistry'
            - '@event_dispatcher'
            - '@router'
            - '@twig'
        tags:
            - { name: controller.service_arguments }

    ConnectHolland\UserBundle\Controller\SecurityController:
        arguments:
            - '@security.authentication_utils'
            - '@form.factory'
            - '@twig'
        tags:
            - { name: controller.service_arguments }

    ConnectHolland\UserBundle\Repository\UserRepository:
        arguments:
            $registry: '@Doctrine\Persistence\ManagerRegistry'
            $class: ~
        tags:
            - { name: doctrine.repository_service }

    ConnectHolland\UserBundle\Command\UserCreateCommand:
        public: true
        arguments:
            $eventDispatcher: '@event_dispatcher'
            $doctrine: '@Doctrine\Persistence\ManagerRegistry'
        tags:
            - { name: console.command }

    ConnectHolland\UserBundle\EventSubscriber\RegistrationSubscriber:
        arguments:
            - '@GisoStallenberg\Bundle\ResponseContentNegotiationBundle\Negotiation\FormatNegotiator'
            - '@request_stack'
        tags:
            - { name: kernel.event_subscriber }

    ConnectHolland\UserBundle\EventSubscriber\PasswordResetFailedSubscriber:
        arguments:
            - '@GisoStallenberg\Bundle\ResponseContentNegotiationBundle\Negotiation\FormatNegotiator'
            - '@request_stack'
        tags:
            - { name: kernel.event_subscriber }

    ConnectHolland\UserBundle\EventSubscriber\CreateUserSubscriber:
        arguments:
            - '@security.user_password_hasher'
            - '@Doctrine\Persistence\ManagerRegistry'
        tags:
            - { name: kernel.event_subscriber }

    ConnectHolland\UserBundle\EventSubscriber\UserLoginSubscriber:
        arguments:
            - '@Doctrine\Persistence\ManagerRegistry'
        tags:
            - { name: kernel.event_subscriber }

    ConnectHolland\UserBundle\EventSubscriber\UserCreatedSubscriber:
        arguments:
            - '@ConnectHolland\UserBundle\Mailer\RegistrationEmail'
        tags:
            - { name: kernel.event_subscriber }

    ConnectHolland\UserBundle\EventSubscriber\ResetUserSubscriber:
        arguments:
            - '@Doctrine\Persistence\ManagerRegistry'
        tags:
            - { name: kernel.event_subscriber }

    ConnectHolland\UserBundle\EventSubscriber\UserResetSubscriber:
        arguments:
            - '@ConnectHolland\UserBundle\Mailer\ResetEmail'
            - '@Doctrine\Persistence\ManagerRegistry'
        tags:
            - { name: kernel.event_subscriber }

    ConnectHolland\UserBundle\EventSubscriber\FlashSubscriber:
        arguments:
            - '@request_stack'
            - '@translator'
        tags:
            - { name: kernel.event_subscriber }

    ConnectHolland\UserBundle\EventSubscriber\UpdatePersistSubscriber:
        arguments:
            $registry: '@doctrine'
        tags:
            - { name: 'kernel.event_subscriber' }

    ConnectHolland\UserBundle\EventSubscriber\UsernameUpdatedSubscriber:
        arguments:
            - '@ConnectHolland\UserBundle\Mailer\ValidateUsernameEmail'
            - '@security.token_storage'
        tags:
            - { name: 'kernel.event_subscriber' }

    ConnectHolland\UserBundle\EventSubscriber\DeleteAccountSubscriber:
        arguments:
            - '@ConnectHolland\UserBundle\Mailer\DeleteEmail'
            - '@router'
        tags:
            - { name: kernel.event_subscriber }

    ConnectHolland\UserBundle\Form\RegistrationType:
        public: true
        arguments:
            $doctrine: '@Doctrine\Persistence\ManagerRegistry'
        tags:
            - { name: 'form.type' }

    ConnectHolland\UserBundle\Form\Account\ProfileType:
        public: true
        arguments:
            $doctrine: '@Doctrine\Persistence\ManagerRegistry'
        tags:
            - { name: 'form.type' }

    ConnectHolland\UserBundle\Form\Account\AccountType:
        public: true
        arguments:
            $passwordConstraints: '@ConnectHolland\UserBundle\Security\PasswordConstraints'
            $doctrine: '@Doctrine\Persistence\ManagerRegistry'
            $tokenStorage: '@security.token_storage'
        tags:
            - { name: 'form.type' }

    ConnectHolland\UserBundle\Form\AccountDeleteType:
        public: true
        arguments:
            $doctrine: '@Doctrine\Persistence\ManagerRegistry'
            $tokenStorage: '@security.token_storage'
        tags:
            - { name: 'form.type' }

    ConnectHolland\UserBundle\Form\NewPasswordType:
        public: true
        arguments:
            - '@ConnectHolland\UserBundle\Security\PasswordConstraints'
        tags:
            - { name: form.type }

    ConnectHolland\UserBundle\Form\PasswordType:
        public: true
        arguments:
            - '@ConnectHolland\UserBundle\Security\PasswordConstraints'
        tags:
            - { name: form.type }

    ConnectHolland\UserBundle\Security\PasswordConstraints:
        arguments:
            $passwordRequirements: []

    Rollerworks\Component\PasswordStrength\Validator\Constraints\P0wnedPasswordValidator:
        lazy: false
        arguments:
            $client: '@Rollerworks\Component\PasswordStrength\P0wnedPassword\Request\Client'
        tags:
            - { name: validator.constraint_validator }

    Rollerworks\Component\PasswordStrength\P0wnedPassword\Request\Client:
        lazy: false
        arguments:
            $client: '@httplug.client'
            $logger: '@logger'

    ConnectHolland\UserBundle\Security\Voter\Owner:
        arguments:
            $decisionManager: '@security.access.decision_manager'
        tags:
            - { name: 'security.voter' }

    ConnectHolland\UserBundle\EventSubscriber\Doctrine\OwnableSubscriber:
        arguments:
            $tokenStorage: '@security.token_storage'
        tags:
            - { name: 'doctrine.event_subscriber' }


    ConnectHolland\UserBundle\ArgumentResolver\FormValueResolver:
        arguments:
            $formFactory: '@form.factory'
        tags:
            - { name: 'controller.argument_value_resolver', priority: 50 }
